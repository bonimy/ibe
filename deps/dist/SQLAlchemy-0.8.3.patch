diff -Naur SQLAlchemy-0.8.3/lib/sqlalchemy/dialects/informix/base.py SQLAlchemy-0.8.3-patched/lib/sqlalchemy/dialects/informix/base.py
--- SQLAlchemy-0.8.3/lib/sqlalchemy/dialects/informix/base.py	2013-10-26 13:21:15.000000000 -0700
+++ SQLAlchemy-0.8.3-patched/lib/sqlalchemy/dialects/informix/base.py	2014-02-07 16:56:56.007775395 -0800
@@ -145,6 +145,10 @@
     ])
 
 
+class InfoSmallFloat(sqltypes.Float):
+    __visit_name__ = "SMALLFLOAT"
+
+
 class InfoDateTime(sqltypes.DateTime):
 
     def bind_processor(self, dialect):
@@ -186,7 +190,7 @@
     1: sqltypes.SMALLINT,       # SMALLINT
     2: sqltypes.INTEGER,        # INT
     3: sqltypes.FLOAT,          # Float
-    3: sqltypes.Float,          # SmallFloat
+    4: sqltypes.Float,          # SmallFloat
     5: sqltypes.DECIMAL,        # DECIMAL
     6: sqltypes.Integer,        # Serial
     7: sqltypes.DATE,           # DATE
@@ -392,8 +396,8 @@
     def has_table(self, connection, table_name, schema=None):
         schema = schema or self.default_schema_name
         cursor = connection.execute(
-                """select tabname from systables where tabname=? and owner=?""",
-                table_name, schema)
+                """select tabname from systables where tabname=?""",
+                table_name)
         return cursor.first() is not None
 
     @reflection.cache
@@ -402,9 +406,9 @@
         c = connection.execute(
             """select colname, coltype, collength, t3.default, t1.colno from
                 syscolumns as t1 , systables as t2 , OUTER sysdefaults as t3
-                where t1.tabid = t2.tabid and t2.tabname=? and t2.owner=?
+                where t1.tabid = t2.tabid and t2.tabname=?
                   and t3.tabid = t2.tabid and t3.colno = t1.colno
-                order by t1.colno""", table_name, schema)
+                order by t1.colno""", table_name)
 
         pk_constraint = self.get_pk_constraint(connection, table_name, schema, **kw)
         primary_cols = pk_constraint['constrained_columns']
@@ -464,7 +468,7 @@
                  sysindexes as t3 , syscolumns as t4 ,
                  sysreferences as t5 , syscolumns as t6 , systables as t7 ,
                  sysconstraints as t8 , sysindexes as t9
-           where t1.tabid = t2.tabid and t2.tabname=? and t2.owner=? and t1.constrtype = 'R'
+           where t1.tabid = t2.tabid and t2.tabname=? and t1.constrtype = 'R'
              and t3.tabid = t2.tabid and t3.idxname = t1.idxname
              and t4.tabid = t2.tabid and t4.colno in (t3.part1, t3.part2, t3.part3,
              t3.part4, t3.part5, t3.part6, t3.part7, t3.part8, t3.part9, t3.part10,
@@ -474,7 +478,7 @@
              t9.part4, t9.part5, t9.part6, t9.part7, t9.part8, t9.part9, t9.part10,
              t9.part11, t9.part11, t9.part12, t9.part13, t9.part4, t9.part15, t9.part16) and t9.idxname =
              t8.idxname
-             and t7.tabid = t5.ptabid""", table_name, schema_sel)
+             and t7.tabid = t5.ptabid""", table_name)
 
         def fkey_rec():
             return {
@@ -516,9 +520,9 @@
         data = connection.execute(
             """select t2.*
             from systables as t1, sysindexes as t2, sysconstraints as t3
-            where t1.tabid=t2.tabid and t1.tabname=? and t1.owner=?
+            where t1.tabid=t2.tabid and t1.tabname=? 
             and t2.idxname=t3.idxname and t3.constrtype='P'""",
-            table_name, schema
+            table_name
         ).fetchall()
 
         colpositions = set()
@@ -580,8 +584,8 @@
             """select t1.viewtext
             from sysviews as t1 , systables as t2
             where t1.tabid=t2.tabid and t2.tabname=?
-            and t2.owner=? order by seqno""",
-             view_name, schema).fetchall()
+            order by seqno""",
+             view_name).fetchall()
 
         return ''.join([row[0] for row in c])
 
diff -Naur SQLAlchemy-0.8.3/lib/sqlalchemy/engine/default.py SQLAlchemy-0.8.3-patched/lib/sqlalchemy/engine/default.py
--- SQLAlchemy-0.8.3/lib/sqlalchemy/engine/default.py	2013-10-26 13:21:15.000000000 -0700
+++ SQLAlchemy-0.8.3-patched/lib/sqlalchemy/engine/default.py	2014-02-07 16:56:56.026622839 -0800
@@ -184,7 +184,7 @@
 
         self.returns_unicode_strings = self._check_unicode_returns(connection)
 
-        self.do_rollback(connection.connection)
+        #self.do_rollback(connection.connection)
 
     def on_connect(self):
         """return a callable which sets up a newly created DBAPI connection.
diff -Naur SQLAlchemy-0.8.3/lib/sqlalchemy/engine/reflection.py SQLAlchemy-0.8.3-patched/lib/sqlalchemy/engine/reflection.py
--- SQLAlchemy-0.8.3/lib/sqlalchemy/engine/reflection.py	2013-10-26 13:21:15.000000000 -0700
+++ SQLAlchemy-0.8.3-patched/lib/sqlalchemy/engine/reflection.py	2014-02-07 16:59:34.427568629 -0800
@@ -315,10 +315,10 @@
           other options passed to the dialect's get_foreign_keys() method.
 
         """
-
-        return self.dialect.get_foreign_keys(self.bind, table_name, schema,
-                                                info_cache=self.info_cache,
-                                                **kw)
+        return []
+        #return self.dialect.get_foreign_keys(self.bind, table_name, schema,
+        #                                        info_cache=self.info_cache,
+        #                                        **kw)
 
     def get_indexes(self, table_name, schema=None, **kw):
         """Return information about indexes in `table_name`.
