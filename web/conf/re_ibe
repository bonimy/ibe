#!/bin/bash 

# * [re-]start IBE

# use "re_ibe help" for assistance
# expects to be in an IBE directory 
# which should have a path ending ~ 
# .../*ibe*/web/conf

# # all just wrapping for running this:
# # 
# ./apachectl.sh stop            && \
# ./configure.py --load=${fcfg}  && \
# ./apachectl.sh start           

export cn=$0;
export cf=` pwd `;
export ca=` basename "${cn}" `;
export ci=`  dirname "${cn}" `;

inst=instances;
syst=bacchus
port=5000;
suff=json;

sprt=${syst}_${port};

typ=${sprt};

dflt=${inst}/${typ}.${suff};

function usage () {
  echo "";
  echo " * [re-] start IBE";
  echo "";
  echo "  usage:";
  echo "";
  echo "    ${ca} [[instances/]sysname_portnum[.json]]";
  echo "";
  echo "      (e.g.)";
  echo "";
  echo "        cd    .../ibe/web/conf";
  echo "        ${ca} ${typ}";
  echo "";
  echo "  currently available instances:";
  echo "";
  ls -1 instances | sed 's/^/       /' | sed 's/\.json//';
  echo "";
}

if echo $* | grep -i    help >/dev/null 2>&1 || \
   echo $* | grep -i -- '-h' >/dev/null 2>&1    ; then
   usage;
   exit -10;
fi

sys_nm=` uname -n `;

xdp=` pwd -P `;

xdt=` basename "${xdp}"  `;
xdh=`  dirname "${xdp}"  `;

xdT=` basename "${xdh}" `;
xdH=`  dirname "${xdh}" `;

xDT=` basename "${xdH}" `;
xDH=`  dirname "${xdH}" `;

#  [[ "ibe"  != "${xDT}" ]]    ; then

if [[ "conf" != "${xdt}" ]] ||  
   [[ "web"  != "${xdT}" ]] ||  
   ! echo "${xDT}" | grep -i ibe >/dev/null 2>&1; then
  echo "error -- expected current directory '${xdp}' path ending to look like .../*ibe*/web/conf";
  exit -1;
fi

given=${dflt};
# 
if [[ "" != "$1" ]]; then
  given="$1";
fi

cfg=${given};
# 
if ! echo "${given}" | grep -i json >/dev/null 2>&1; then
  cfg=${given}.json;
fi

fcfg=${cfg};
# 
if ! [[ -r "${cfg}" ]]; then
  # echo "cannot read config @ '${cfg}' ";
  # echo "trying  ...  '${inst}/${cfg}' ";
  fcfg=${inst}/${cfg};
  # echo "error -- unable to read config @ '${cfg}' ";
  # exit -3;
fi

if ! [[ -r "${fcfg}" ]]; then
  echo "error -- unable to read config @ '${cfg}' or '${fcfg}' ";
  exit -4;
fi

if ! echo "${fcfg}" | grep -i ${sys_nm} >/dev/null 2>&1; then
  echo "error -- expected config name '${fcfg}' would include system name '${sys_nm}'";
  exit -5;
fi

echo "BEGIN"                            && \
  ./apachectl.sh stop                   && \
  echo "Apache stopped"                 && \
    ./configure.py --load=${fcfg}       && \
    echo "configure[.py]'d"             && \
      echo "  pause for httpd stop..."  && \
      sleep 1                           && \
  ./apachectl.sh start                  && \
  echo "Apache restarted"               && \
echo "DONE"                             && \
exit 0;

