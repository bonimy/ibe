#!/bin/bash 

# $Id: re_ibe,v 20150903.99113738 2015/09/03 18:37:38 modell ipac $

# [re-]start IBE

# $0 [ help | [sudo] [instances/]sysname_port[.json] ]

# $0 help
# $0 bacchus_5000
# $0 sudo bacchus_8000
# $0 sudo hades_8000

# {{{  # notes

    # use "re_ibe help" for assistance

    # expects to be in an IBE directory 
    # which should have a path ending ~ 
    # .../*ibe*/web/conf

    # # all just wrapping for running this (dev):
    # # 
    # [sudo] ./apachectl.sh stop     && \
    # ./configure.py --load=${fcfg}  && \
    # [sudo] ./apachectl.sh start           
    # 
    # # or this (ops):
    # # 
    # [sudo] /etc/init.d/irsa_web stop     && \
    # ./configure.py --load=${fcfg}        && \
    # [sudo] /etc/init.d/irsa_web start           

# }}}

function LC () {
    tr '[:upper:]' '[:lower:]'
}

export cn=$0;
export cf=` pwd `;
export ca=` basename "${cn}" `;
export ci=`  dirname "${cn}" `;

sudo="sudo";
sudo="";

inst=instances;
suff=json;

syst=bacchus
port=5000;

syst=$( uname -n | LC );

sprt=${syst}_${port};

export typ=${sprt};

dflt=${inst}/${typ}.${suff};

cp_dev=./apachectl.sh;
cp_ops=/etc/init.d/irsa_web;

cp_use=${cp_dev};

if ! echo "${syst}" | grep -i bacchus >/dev/null 2>&1; then
    cp_use=${cp_ops};
fi

if ! [[ -r ${cp_use} ]]; then
    echo "${cp_use} is not readable";
    cp_use=${cp_dev};
    echo "reverting to ${cp_use}";
fi

if ! [[ -x ${cp_use} ]]; then
    echo "error -- ${cp_use} is not executable";
    exit 9;
fi

function usage () {
  echo "";
  echo " * [re-] start IBE";
  echo "";
  echo "  usage:";
  echo "";
  echo "    ${ca} [no[sudo]] [[instances/]sysname_portnum[.json]]";
  echo "";
  echo "      (e.g.)";
  echo "";
  echo "        cd    .../ibe/web/conf";
  echo "        ${ca} ${typ}";
  echo "";
  echo "          defaults to nosudo";
  echo "";
  echo "            (sudo only used to control apache)";
  echo "";
  echo "  currently available instances:";
  echo "";
  ls -1 instances | sed 's/^/       /' | sed 's/\.json//';
  echo "";
}

if echo $* | grep -i    help >/dev/null 2>&1 || \
   echo $* | grep -i -- '-h' >/dev/null 2>&1    ; then
   usage;
   exit 10;
fi

if [[ "_nosudo_" == "_$1_" ]]; then
    shift;
    sudo="";

elif [[ "_sudo_" == "_$1_" ]]; then
    shift;
    sudo="sudo";
fi

# sys_nm=` uname -n `;
sys_nm=${syst};

xdp=` pwd -P `;

xdt=` basename "${xdp}"  `;
xdh=`  dirname "${xdp}"  `;

xdT=` basename "${xdh}" `;
xdH=`  dirname "${xdh}" `;

xDT=` basename "${xdH}" `;
xDH=`  dirname "${xdH}" `;

if [[ "conf" != "${xdt}" ]] ||  
   [[ "web"  != "${xdT}" ]] ||  
   ! echo "${xDT}" | grep -i ibe >/dev/null 2>&1; then
  echo "error -- expected current directory '${xdp}' path ending to look like .../*ibe*/web/conf";
  exit 11;
fi

given=${dflt};
# 
if [[ "" != "$1" ]]; then
  given="$1";
fi

cfg=${given};
# 
if ! echo "${given}" | grep -i json >/dev/null 2>&1; then
  cfg=${given}.json;
fi

fcfg=${cfg};
# 
if ! [[ -r "${cfg}" ]]; then
  echo "cannot read config @ '${cfg}' ";
  echo "trying  ...  '${inst}/${cfg}' ";
  fcfg=${inst}/${cfg};
fi

if ! [[ -r "${fcfg}" ]]; then
  echo "cannot read config @ '${fcfg}' ";
  exit 12;
fi

if ! echo "${fcfg}" | grep -i ${sys_nm} >/dev/null 2>&1; then
  echo "error -- expected config name '${fcfg}' would include system name '${sys_nm}'";
  exit 13;
fi

echo "BEGIN"                            && \
  ${sudo} ${cp_use} stop                && \
  echo "Apache stopped"                 && \
    ./configure.py --load=${fcfg}       && \
    echo "configure[.py]'d"             && \
      echo "  pause for httpd stop..."  && \
      sleep 1                           && \
  ${sudo} ${cp_use} start               && \
  echo "Apache restarted"               && \
echo "DONE"                             && \
exit 0;

# vi:set tabstop=4 shiftwidth=4 expandtab syntax=sh foldmethod=marker foldmarker={{{,}}} :

